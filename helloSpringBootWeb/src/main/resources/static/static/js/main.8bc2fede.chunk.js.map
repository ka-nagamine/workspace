{"version":3,"sources":["components/Todo.js","containers/Todo.js","actions/Todo.js","components/Cal.js","containers/Cal.js","actions/Cal.js","components/JavaDB.js","containers/JavaDB.js","components/Total.js","containers/Total.js","components/MailReg.js","containers/MailReg.js","components/Login.js","containers/Login.js","App.js","reducers/Todo.js","reducers/Cal.js","reducers/MailReg.js","reducers/Login.js","index.js","createStore.js"],"names":["Todo","state","todo","_this2","this","console","log","props","list","todoList","map","index","react_default","a","createElement","key","type","onChange","elm","setState","target","value","Button_default","variant","color","onClick","addTodo","React","Component","connect","dispatch","payload","actions","Cal","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","num1","num2","add","pageSet","e","window","alert","newValue","replace","doChange","method","action","onSubmit","handleSubmitJava","TextField_default","name","label","margin","elm2","handleSubmit","cal","JavaDB","Total","total","MailReg","mailAddress","pass","isAddMode","curValue","length","styles","registerBtn","isAdd","display","isNotAdd","style","width","size","doChange2","mailReg","Login","id","auth","InputBase_default","login","App","page","Content","ListContent","containers_Cal","setNextPage","containers_Todo","containers_Total","setPrePage","BrowserRouter","className","Route","exact","path","component","href","Java","Mail","initialState","todoReducer","arguments","undefined","newState","assign","push","calReducer","parseInt","mailRegReducer","loginReducer","store","reduxCreateStore","combineReducers","applyMiddleware","logger","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8bc2fede.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Todo extends React.Component {\r\n    state = {\r\n        todo: ''\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n\r\n        // StoreのTodoからリストを生成\r\n        const list = this.props.todo.todoList.map((todo, index) => <li key={index}>{todo}</li>)\r\n\r\n        return (\r\n            <div>\r\n                <input type=\"text\" onChange={elm => this.setState({ todo: elm.target.value })} />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.props.addTodo(this.state.todo)}>追加</Button><br />\r\n                <ul>\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Todo';\r\nimport Todo from '../components/Todo';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todo: state.todo,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addTodo: (todo) => dispatch(actions.addTodo(todo)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo)","export const addTodo = (todo) => {\r\n    return {\r\n        type: 'ADD_TODO',\r\n        payload: { todo: todo }\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst propTypes = {\r\n    pageSet: PropTypes.func,\r\n};\r\n\r\nexport default class Cal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.props.add(this.state.num1, this.state.num2)\r\n        return this.props.pageSet();\r\n    }\r\n\r\n    handleSubmitJava(e) {\r\n        window.alert('submit')\r\n        // e.preventDefault()\r\n    }\r\n    \r\n    doChange(e) {\r\n        const curValue = e.target.value\r\n        // 数字以外は削除\r\n        const newValue = curValue.replace(/[^0-9]/g, '')\r\n        this.setState({ num1: newValue })\r\n    } \r\n\r\n    state = {\r\n        num1: 0,\r\n        num2: 0\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const doChange = (e) => this.doChange(e)\r\n        const doSubmit = (e) => this.handleSubmitJava(e)\r\n        return (\r\n            <div>\r\n                <form method='post' action=\"/index2\" onSubmit={doSubmit}>\r\n\r\n                    <TextField type='text' name='numInput1' value={this.state.num1} onChange={doChange} label=\"入力値１\" variant=\"outlined\" margin=\"normal\"/>\r\n                    <TextField type='text' name='name' onChange={elm2 => this.setState({ num2: elm2.target.value })} label=\"入力値２\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br />\r\n                    <Button type='submit' variant='contained' color='primary' onClick={() => this.handleSubmit()}>計算結果</Button><br />\r\n\r\n                    <TextField type='text' name='numInput1' value={this.state.num1} onChange={doChange} label=\"id\" variant=\"outlined\" margin=\"normal\" />\r\n                    <TextField type='text' name='name' onChange={elm2 => this.setState({ num2: elm2.target.value })} label=\"name\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br>\r\n                    </br>\r\n                    <Button type='submit' variant='contained' color='secondary' >java通信</Button><br />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCal.propTypes = propTypes;","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Cal';\r\n// import * as actions from '../actions/PageSet';\r\nimport Cal from '../components/Cal';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        num1: state.cal.num1,\r\n        num2: state.cal.num2,\r\n        // num2: state.pageset.page,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        add: (num1,num2) => dispatch(actions.add(num1,num2)),\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cal)","export const add = (num1,num2) => {\r\n    return {\r\n        type: 'ADD',\r\n        payload: { num1: num1 ,num2 : num2 }\r\n    \r\n    };\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default class JavaDB extends React.Component {\r\n    handleSubmitJava(e) {\r\n        window.alert('submit')\r\n        // e.preventDefault()\r\n    }\r\n    \r\n    doChange(e) {\r\n        const curValue = e.target.value\r\n        // 数字以外は削除\r\n        const newValue = curValue.replace(/[^0-9]/g, '')\r\n        this.setState({ num1: newValue })\r\n    } \r\n\r\n    state = {\r\n        num1: 0,\r\n        num2: 0\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const doChange = (e) => this.doChange(e)\r\n        const doSubmit = (e) => this.handleSubmitJava(e)\r\n        return (\r\n            <div>\r\n                <form method='post' action=\"/index2\" onSubmit={doSubmit}>\r\n                    <TextField type='text' name='numInput1' value={this.state.num1} onChange={doChange} label=\"id\" variant=\"outlined\" margin=\"normal\" />\r\n                    <TextField type='text' name='name' onChange={elm2 => this.setState({ num2: elm2.target.value })} label=\"name\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br />\r\n                    <Button type='submit' variant='contained' color='secondary' >java通信</Button><br />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Cal';\r\nimport Total from '../components/JavaDB';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Total)","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Total extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    handleSubmit() {\r\n        return this.props.pageSet();\r\n    }\r\n    state = {\r\n        total: '',\r\n    }\r\n\r\n    render() {\r\n        const total = this.props.total\r\n        return (\r\n            <div>\r\n                計算結果\r\n                <ul>\r\n                    {total}\r\n                </ul>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => this.handleSubmit()}>戻る</Button><br />\r\n            </div>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Cal';\r\nimport Total from '../components/Total';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // num1: state.cal.num1,\r\n        // num2: state.cal.num2,\r\n        total: state.cal.total,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // add: (num1, num2) => dispatch(actions.add(num1, num2)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Total)","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import { Field, reduxForm } from 'redux-form';\r\n\r\nconst propTypes = {\r\n    isAddMode: PropTypes.bool.isRequired,\r\n    mailAddress: PropTypes.string.isRequired,\r\n    pass: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default class MailReg extends React.Component {\r\n\r\n    handleSubmitJava(e) {\r\n        // window.alert('メールアドレスを登録します')\r\n        // e.preventDefault()\r\n    }\r\n\r\n    doChange(e) {\r\n        const curValue = e.target.value\r\n        this.setState({ mailAddress: curValue })\r\n        if (this.state.mailAddress.length > 3 && this.state.pass.length > 6) {\r\n            this.state.isAddMode = true\r\n        } else {\r\n            this.state.isAddMode = false\r\n        }\r\n    }\r\n\r\n    doChange2(e) {\r\n        const curValue = e.target.value\r\n        this.setState({ pass: curValue })\r\n        if (this.state.mailAddress.length > 3 && this.state.pass.length > 6) {\r\n            this.state.isAddMode = true\r\n        } else {\r\n            this.state.isAddMode = false\r\n        }\r\n    }\r\n\r\n    doChange3(e) {\r\n        const curValue = e.target.value\r\n        const type = e.target.type\r\n\r\n        // name属性値によって処理を分岐\r\n        switch (type) {\r\n            // name属性値がmailだった場合\r\n            case \"mailAddress\":\r\n                this.setState({ mailAddress: curValue })\r\n                break;\r\n            case \"pass\":\r\n                this.setState({ pass: curValue })\r\n                break;\r\n        }\r\n        if (this.state.mailAddress.length > 0 && this.state.pass.length > 0) {\r\n            this.state.isAddMode = true\r\n        }\r\n\r\n    }\r\n\r\n    state = {\r\n        mailAddress: '',\r\n        pass: '',\r\n        isAddMode: false\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const styles = {\r\n            registerBtn: {\r\n                isAdd: {\r\n                    display: 'inline-block'\r\n                },\r\n                isNotAdd: {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        }\r\n\r\n        const doChange = (e) => this.doChange(e)\r\n        const doChange2 = (e) => this.doChange2(e)\r\n        const doSubmit = (e) => this.handleSubmitJava(e)\r\n        return (\r\n            <div>\r\n                <form method='post' action=\"/mailReg\" onSubmit={doSubmit}>\r\n                    <TextField type='text'\r\n                        name='mailAddress'\r\n                        style={{ width: '500px' }}\r\n                        value={this.state.mailAddress}\r\n                        onChange={doChange}\r\n                        label=\"メールアドレス\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <br />\r\n                    <TextField type='text'\r\n                        name='pass'\r\n                        size='20'\r\n                        value={this.state.pass}\r\n                        onChange={doChange2}\r\n                        label=\"パスワード\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\" />\r\n                    <br />\r\n                    <Button type='submit'\r\n                        label='登録'\r\n                        variant='contained'\r\n                        color='secondary'\r\n                        style={(this.state.isAddMode) ? styles.registerBtn.isAdd : styles.registerBtn.isNotAdd}>\r\n                        登録\r\n                    </Button>\r\n\r\n                    <br />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMailReg.propTypes = propTypes;","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/MailReg';\r\nimport MailReg from '../components/MailReg';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mailAddress: state.mailReg.mailAddress,\r\n        pass: state.mailReg.pass,\r\n        isAddMode: state.mailReg.isAddMode,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MailReg)","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n// import { Field, reduxForm } from 'redux-form';\r\n\r\nconst propTypes = {\r\n    isAddMode: PropTypes.bool.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    pass: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    handleSubmitJava(e) {\r\n        // window.alert('メールアドレスを登録します')\r\n        // e.preventDefault()\r\n    }\r\n\r\n    doChange(e) {\r\n        const curValue = e.target.value\r\n        this.setState({ id: curValue })\r\n        if (this.state.id.length > 0 && this.state.pass.length > 6) {\r\n            this.state.isAddMode = true\r\n        } else {\r\n            this.state.isAddMode = false\r\n        }\r\n    }\r\n\r\n    doChange2(e) {\r\n        const curValue = e.target.value\r\n        this.setState({ pass: curValue })\r\n        if (this.state.id.length > 0 && this.state.pass.length > 6) {\r\n            this.state.isAddMode = true\r\n        } else {\r\n            this.state.isAddMode = false\r\n        }\r\n    }\r\n\r\n    doChange3(e) {\r\n        const curValue = e.target.value\r\n        const type = e.target.type\r\n\r\n        // name属性値によって処理を分岐\r\n        switch (type) {\r\n            // name属性値がmailだった場合\r\n            case \"id\":\r\n                this.setState({ id: curValue })\r\n                break;\r\n            case \"pass\":\r\n                this.setState({ pass: curValue })\r\n                break;\r\n        }\r\n        if (this.state.id.length > 0 && this.state.pass.length > 0) {\r\n            this.state.isAddMode = true\r\n        }\r\n\r\n    }\r\n\r\n    state = {\r\n        id: '',\r\n        pass: '',\r\n        isAddMode: false,\r\n        auth: ''\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const styles = {\r\n            registerBtn: {\r\n                isAdd: {\r\n                    display: 'inline-block'\r\n                },\r\n                isNotAdd: {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        }\r\n\r\n        const doChange = (e) => this.doChange(e)\r\n        const doChange2 = (e) => this.doChange2(e)\r\n        const doSubmit = (e) => this.handleSubmitJava(e)\r\n        return (\r\n            <div>\r\n                <form method='post' action=\"/login\" onSubmit={doSubmit}>\r\n                    <TextField type='text' name='id' style={{ width: '250px' }} value={this.state.id} onChange={doChange} label=\"ユーザID\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br />\r\n                    <TextField type='text' name='pass' value={this.state.pass} onChange={doChange2} label=\"パスワード\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br />\r\n                    <Button type='submit'\r\n                        variant='contained'\r\n                        color='secondary'\r\n                        style={(this.state.isAddMode) ? styles.registerBtn.isAdd : styles.registerBtn.isNotAdd}>\r\n                        ログイン\r\n                    </Button>\r\n                    <br />\r\n                    <InputBase name='auth' value={this.state.auth} />\r\n                    <br />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = propTypes;","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Login';\r\nimport Login from '../components/Login';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        id: state.login.id,\r\n        pass: state.login.pass,\r\n        isAddMode: state.login.isAddMode,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, { Component } from 'react';\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText' \n\nimport './App.css';\nimport Todo from './containers/Todo';\nimport Cal from './containers/Cal';\nimport Java from './containers/JavaDB';\nimport Total from './containers/Total';\nimport Mail from './containers/MailReg';\nimport Login from './containers/Login';\nimport { BrowserRouter, Switch, Route, Link} from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n    };\n  }\n\n  setNextPage() {\n    this.setState({ page: 2 });\n  }\n\n  setPrePage() {\n    this.setState({ page: 1 });\n  }\n\n  render() {\n\n    // メニューの選択状態\n    // const currentPage = this.state.currentPage; // （1）\n    const currentPage = this.state.page; // （1）\n\n    //  メイン部分のコンポーネントの入れ物\n    let Content = null; // デフォルトでは何も表示しない\n    let ListContent = null; // デフォルトでは何も表示しない\n\n    switch (currentPage) {\n      case 1:\n        Content = (() => <Cal pageSet={() => { this.setNextPage(); }} />);\n        ListContent = (() => <Todo />);\n        break;\n      case 2:\n        Content = (() => <Total pageSet={() => { this.setPrePage(); }} />);\n        ListContent = (() => '');\n        break;\n      default:\n        Content = (() => <Cal pageSet={() => { this.setNextPage(); }} />);\n        ListContent = (() => <Todo />);\n        break;\n    }\n\n    const Home = () => (\n      <div>\n        <h1>どの開発ページへ遷移する？</h1>\n        <ui>\n          <li><a href='/list'>リスト追加</a></li>\n          <li><a href='/add'>足し算</a></li>\n          <li><a href='/java'>Java通信</a></li>\n          <li><a href='/mailReg'>メール登録</a></li>\n          <li><a href='/Login'>ログイン</a></li>\n        </ui>\n      {/* どの開発ページへ遷移する？\n        <List>\n          <ListItem><ListItemText><a href='/list'>リスト追加</a> </ListItemText></ListItem>\n          <ListItem><ListItemText><a href='/add'>足し算</a> </ListItemText></ListItem>\n          <ListItem><ListItemText><a href='/java'>Java通信</a> </ListItemText></ListItem>\n          <ListItem><ListItemText><a href='/mailReg'>メール登録</a> </ListItemText></ListItem>\n          <ListItem><ListItemText><a href='/mailReg'>メール登録</a> </ListItemText></ListItem>\n        </List> */}\n      </div>\n    )\n\n\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/list\" component={ListContent} />\n          <Route path=\"/add\" component={Content} />\n          <Route path=\"/java\" component={Java} />\n          <Route path=\"/mailReg\" component={Mail} />\n          <Route path=\"/login\" component={Login} />\n        </div>\n      </BrowserRouter>\n      // <div className=\"App\">\n      //   <Content /> {}\n      //   <br />\n      //   <ListContent /> {}\n      // </div>\n    );\n  }\n}\n\nexport default App;","const initialState = {\r\n    todoList: [],\r\n}\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            // 新しく追加するTODO\r\n            const todo = action.payload.todo;\r\n            // stateを複製して追加\r\n            const newState = Object.assign({}, state);\r\n            newState.todoList.push(todo);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    total: 0,\r\n}\r\n\r\nexport const calReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            const num1 = parseInt(action.payload.num1);\r\n            const num2 = parseInt(action.payload.num2);\r\n            // stateを複製して追加\r\n            const newState = Object.assign({}, state);\r\n            newState.total = num1 + num2;\r\n            console.log(newState.total);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    isAddMode: false,\r\n}\r\n\r\nexport const mailRegReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            // const num1 = parseInt(action.payload.mailAddress);\r\n            // const num2 = parseInt(action.payload.num2);\r\n            // // stateを複製して追加\r\n            const newState = Object.assign({}, state);\r\n            // newState.total = num1 + num2;\r\n            // console.log(newState.total);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    isAddMode: false,\r\n}\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            // const num1 = parseInt(action.payload.mailAddress);\r\n            // const num2 = parseInt(action.payload.num2);\r\n            // // stateを複製して追加\r\n            const newState = Object.assign({}, state);\r\n            // newState.total = num1 + num2;\r\n            // console.log(newState.total);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport App from './App.js';\nimport createStore from './createStore';\n// import registerServiceWorker from './serviceWorker';\nconst store = createStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// registerServiceWorker.register();","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { todoReducer } from \"./reducers/Todo\";\r\nimport { calReducer } from \"./reducers/Cal\";\r\nimport { mailRegReducer } from \"./reducers/MailReg\";\r\nimport { loginReducer } from \"./reducers/Login\";\r\nimport { pageSetReducer } from \"./reducers/PageSet\";\r\n\r\nexport default function createStore() {\r\n    const store = reduxCreateStore(\r\n        combineReducers({\r\n            todo: todoReducer,\r\n            cal: calReducer,\r\n            mailReg: mailRegReducer,\r\n            login: loginReducer,\r\n            // pageset: pageSetReducer,\r\n        }),\r\n        applyMiddleware(\r\n            logger,\r\n        )\r\n    );\r\n\r\n    return store;\r\n}"],"sourceRoot":""}