{"version":3,"sources":["components/Todo.js","containers/Todo.js","actions/Todo.js","components/Cal.js","containers/Cal.js","actions/Cal.js","components/Total.js","containers/Total.js","App.js","reducers/Todo.js","reducers/Cal.js","index.js","createStore.js"],"names":["Todo","state","todo","_this2","this","console","log","props","list","todoList","map","index","react_default","a","createElement","key","type","onChange","elm","setState","target","value","Button_default","variant","color","onClick","addTodo","React","Component","connect","dispatch","payload","actions","Cal","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","num1","num2","add","pageSet","e","window","alert","newValue","replace","doChange","method","action","onSubmit","handleSubmitJava","TextField_default","name","label","margin","elm2","handleSubmit","cal","Total","total","App","page","Content","ListContent","containers_Cal","setNextPage","containers_Todo","containers_Total","setPrePage","className","initialState","todoReducer","arguments","length","undefined","newState","assign","push","calReducer","parseInt","store","reduxCreateStore","combineReducers","applyMiddleware","logger","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ae6aa211.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Todo extends React.Component {\r\n    state = {\r\n        todo: ''\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n\r\n        // StoreのTodoからリストを生成\r\n        const list = this.props.todo.todoList.map((todo, index) => <li key={index}>{todo}</li>)\r\n\r\n        return (\r\n            <div>\r\n                <input type=\"text\" onChange={elm => this.setState({ todo: elm.target.value })} />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.props.addTodo(this.state.todo)}>追加</Button><br />\r\n                <ul>\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Todo';\r\nimport Todo from '../components/Todo';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todo: state.todo,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addTodo: (todo) => dispatch(actions.addTodo(todo)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo)","export const addTodo = (todo) => {\r\n    return {\r\n        type: 'ADD_TODO',\r\n        payload: { todo: todo }\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst propTypes = {\r\n    pageSet: PropTypes.func,\r\n};\r\n\r\nexport default class Cal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.props.add(this.state.num1, this.state.num2)\r\n        return this.props.pageSet();\r\n    }\r\n\r\n    handleSubmitJava(e) {\r\n        window.alert('submit')\r\n        // e.preventDefault()\r\n    }\r\n    \r\n    doChange(e) {\r\n        const curValue = e.target.value\r\n        // 数字以外は削除\r\n        const newValue = curValue.replace(/[^0-9]/g, '')\r\n        this.setState({ num1: newValue })\r\n    } \r\n\r\n    state = {\r\n        num1: 0,\r\n        num2: 0\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const doChange = (e) => this.doChange(e)\r\n        const doSubmit = (e) => this.handleSubmitJava(e)\r\n        return (\r\n            <div>\r\n                <form method='post' action=\"/index2\" onSubmit={doSubmit}>\r\n\r\n                    <TextField type='text' name='numInput1' value={this.state.num1} onChange={doChange} label=\"入力値１\" variant=\"outlined\" margin=\"normal\"/>\r\n                    <TextField type='text' name='name' onChange={elm2 => this.setState({ num2: elm2.target.value })} label=\"入力値２\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br />\r\n                    <Button type='submit' variant='contained' color='primary' onClick={() => this.handleSubmit()}>計算結果</Button><br />\r\n\r\n                    <TextField type='text' name='numInput1' value={this.state.num1} onChange={doChange} label=\"id\" variant=\"outlined\" margin=\"normal\" />\r\n                    <TextField type='text' name='name' onChange={elm2 => this.setState({ num2: elm2.target.value })} label=\"name\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br>\r\n                    </br>\r\n                    <Button type='submit' variant='contained' color='secondary' >java通信</Button><br />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCal.propTypes = propTypes;","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Cal';\r\n// import * as actions from '../actions/PageSet';\r\nimport Cal from '../components/Cal';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        num1: state.cal.num1,\r\n        num2: state.cal.num2,\r\n        // num2: state.pageset.page,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        add: (num1,num2) => dispatch(actions.add(num1,num2)),\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cal)","export const add = (num1,num2) => {\r\n    return {\r\n        type: 'ADD',\r\n        payload: { num1: num1 ,num2 : num2 }\r\n    \r\n    };\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Total extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    handleSubmit() {\r\n        return this.props.pageSet();\r\n    }\r\n    state = {\r\n        total: '',\r\n    }\r\n\r\n    render() {\r\n        const total = this.props.total\r\n        return (\r\n            <div>\r\n                計算結果\r\n                <ul>\r\n                    {total}\r\n                </ul>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => this.handleSubmit()}>戻る</Button><br />\r\n            </div>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Cal';\r\nimport Total from '../components/Total';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // num1: state.cal.num1,\r\n        // num2: state.cal.num2,\r\n        total: state.cal.total,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // add: (num1, num2) => dispatch(actions.add(num1, num2)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Total)","import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './containers/Todo';\n// import Todo_1 from './containers/Todo_1';\nimport Cal from './containers/Cal';\nimport Total from './containers/Total';\n// import { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n    };\n  }\n\n  setNextPage() {\n    this.setState({ page: 2 });\n  }\n\n  setPrePage() {\n    this.setState({ page: 1 });\n  }\n\n  render() {\n\n    // メニューの選択状態\n    // const currentPage = this.state.currentPage; // （1）\n    const currentPage = this.state.page; // （1）\n\n    //  メイン部分のコンポーネントの入れ物\n    let Content = null; // デフォルトでは何も表示しない\n    let ListContent = null; // デフォルトでは何も表示しない\n\n    switch (currentPage) {\n      case 1:\n        Content = (() => <Cal pageSet={() => { this.setNextPage(); }} />);\n        ListContent = (() => <Todo />);\n        break;\n      case 2:\n        Content = (() => <Total pageSet={() => { this.setPrePage(); }} />);\n        ListContent = (() => '');\n        break;\n      default:\n        Content = (() => <Cal pageSet={() => { this.setNextPage(); }} />);\n        ListContent = (() => <Todo />);\n        break;\n    }\n\n\n    return (\n      // <BrowserRouter>\n      //   <div className=\"App\">\n      //   <Route exact path=\"/\" component={Todo} />\n      //   <Route path=\"/memo\" component={Todo_1} />\n      //     {/* <Todo />\n      //     <Todo_1 /> */}\n      //   </div>\n      // </BrowserRouter>\n      <div className=\"App\">\n        <Content /> {}\n        <br />\n        <ListContent /> {}\n      </div>\n    );\n  }\n}\n\nexport default App;","const initialState = {\r\n    todoList: [],\r\n}\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            // 新しく追加するTODO\r\n            const todo = action.payload.todo;\r\n            // stateを複製して追加\r\n            const newState = Object.assign({}, state);\r\n            newState.todoList.push(todo);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    total: 0,\r\n}\r\n\r\nexport const calReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            const num1 = parseInt(action.payload.num1);\r\n            const num2 = parseInt(action.payload.num2);\r\n            // stateを複製して追加\r\n            const newState = Object.assign({}, state);\r\n            newState.total = num1 + num2;\r\n            console.log(newState.total);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport App from './App.js';\nimport createStore from './createStore';\n// import registerServiceWorker from './serviceWorker';\nconst store = createStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// registerServiceWorker.register();","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { todoReducer } from \"./reducers/Todo\";\r\nimport { calReducer } from \"./reducers/Cal\";\r\nimport { pageSetReducer } from \"./reducers/PageSet\";\r\n\r\nexport default function createStore() {\r\n    const store = reduxCreateStore(\r\n        combineReducers({\r\n            todo: todoReducer,\r\n            cal: calReducer,\r\n            // pageset: pageSetReducer,\r\n        }),\r\n        applyMiddleware(\r\n            logger,\r\n        )\r\n    );\r\n\r\n    return store;\r\n}"],"sourceRoot":""}