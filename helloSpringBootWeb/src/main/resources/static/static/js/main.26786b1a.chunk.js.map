{"version":3,"sources":["components/Todo.js","containers/Todo.js","actions/Todo.js","components/Cal.js","containers/Cal.js","actions/Cal.js","components/JavaDB.js","containers/JavaDB.js","components/Total.js","containers/Total.js","components/MailReg.js","containers/MailReg.js","axios/axios.js","components/Login.js","containers/Login.js","actions/Login.js","components/Ok.js","components/Ng.js","App.js","reducers/Todo.js","reducers/Cal.js","reducers/MailReg.js","reducers/Login.js","index.js","createStore.js"],"names":["Todo","state","todo","_this2","this","console","log","props","list","todoList","map","index","react_default","a","createElement","key","type","onChange","elm","setState","target","value","Button_default","variant","color","onClick","addTodo","React","Component","connect","dispatch","payload","actions","Cal","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","num1","num2","add","pageSet","e","window","alert","newValue","replace","doChange","method","action","onSubmit","handleSubmitJava","TextField_default","name","label","margin","elm2","handleSubmit","cal","JavaDB","Total","total","MailReg","mailAddress","pass","isAddMode","curValue","length","styles","registerBtn","isAdd","display","isNotAdd","style","width","doChange2","mailReg","axios","create","baseURL","headers","Content-Type","Login","id","login","auth","params","URLSearchParams","append","post","then","result","data","_login","App","page","Content","ListContent","containers_Cal","setNextPage","containers_Todo","containers_Total","setPrePage","BrowserRouter","className","Route","exact","path","component","href","Java","Mail","initialState","todoReducer","arguments","undefined","newState","assign","push","calReducer","parseInt","mailRegReducer","loginReducer","store","reduxCreateStore","combineReducers","applyMiddleware","logger","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.26786b1a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Todo extends React.Component {\r\n    state = {\r\n        todo: ''\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n\r\n        // StoreのTodoからリストを生成\r\n        const list = this.props.todo.todoList.map((todo, index) => <li key={index}>{todo}</li>)\r\n\r\n        return (\r\n            <div>\r\n                <input type=\"text\" onChange={elm => this.setState({ todo: elm.target.value })} />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.props.addTodo(this.state.todo)}>追加</Button><br />\r\n                <ul>\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Todo';\r\nimport Todo from '../components/Todo';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todo: state.todo,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addTodo: (todo) => dispatch(actions.addTodo(todo)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo)","export const addTodo = (todo) => {\r\n    return {\r\n        type: 'ADD_TODO',\r\n        payload: { todo: todo }\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst propTypes = {\r\n    pageSet: PropTypes.func,\r\n};\r\n\r\nexport default class Cal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.props.add(this.state.num1, this.state.num2)\r\n        return this.props.pageSet();\r\n    }\r\n\r\n    handleSubmitJava(e) {\r\n        window.alert('submit')\r\n        // e.preventDefault()\r\n    }\r\n    \r\n    doChange(e) {\r\n        const curValue = e.target.value\r\n        // 数字以外は削除\r\n        const newValue = curValue.replace(/[^0-9]/g, '')\r\n        this.setState({ num1: newValue })\r\n    } \r\n\r\n    state = {\r\n        num1: 0,\r\n        num2: 0\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const doChange = (e) => this.doChange(e)\r\n        const doSubmit = (e) => this.handleSubmitJava(e)\r\n        return (\r\n            <div>\r\n                <form method='post' action=\"/index2\" onSubmit={doSubmit}>\r\n\r\n                    <TextField type='text' name='numInput1' value={this.state.num1} onChange={doChange} label=\"入力値１\" variant=\"outlined\" margin=\"normal\"/>\r\n                    <TextField type='text' name='name' onChange={elm2 => this.setState({ num2: elm2.target.value })} label=\"入力値２\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br />\r\n                    <Button type='submit' variant='contained' color='primary' onClick={() => this.handleSubmit()}>計算結果</Button><br />\r\n\r\n                    <TextField type='text' name='numInput1' value={this.state.num1} onChange={doChange} label=\"id\" variant=\"outlined\" margin=\"normal\" />\r\n                    <TextField type='text' name='name' onChange={elm2 => this.setState({ num2: elm2.target.value })} label=\"name\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br>\r\n                    </br>\r\n                    <Button type='submit' variant='contained' color='secondary' >java通信</Button><br />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCal.propTypes = propTypes;","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Cal';\r\n// import * as actions from '../actions/PageSet';\r\nimport Cal from '../components/Cal';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        num1: state.cal.num1,\r\n        num2: state.cal.num2,\r\n        // num2: state.pageset.page,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        add: (num1, num2) => dispatch(actions.add(num1, num2)),\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cal)","export const add = (num1,num2) => {\r\n    return {\r\n        type: 'ADD',\r\n        payload: { num1: num1 ,num2 : num2 }\r\n    \r\n    };\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default class JavaDB extends React.Component {\r\n    handleSubmitJava(e) {\r\n        window.alert('submit')\r\n        // e.preventDefault()\r\n    }\r\n    \r\n    doChange(e) {\r\n        const curValue = e.target.value\r\n        // 数字以外は削除\r\n        const newValue = curValue.replace(/[^0-9]/g, '')\r\n        this.setState({ num1: newValue })\r\n    } \r\n\r\n    state = {\r\n        num1: 0,\r\n        num2: 0\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const doChange = (e) => this.doChange(e)\r\n        const doSubmit = (e) => this.handleSubmitJava(e)\r\n        return (\r\n            <div>\r\n                <form method='post' action=\"/index2\" onSubmit={doSubmit}>\r\n                    <TextField type='text' name='numInput1' value={this.state.num1} onChange={doChange} label=\"id\" variant=\"outlined\" margin=\"normal\" />\r\n                    <TextField type='text' name='name' onChange={elm2 => this.setState({ num2: elm2.target.value })} label=\"name\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br />\r\n                    <Button type='submit' variant='contained' color='secondary' >java通信</Button><br />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Cal';\r\nimport Total from '../components/JavaDB';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Total)","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Total extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    handleSubmit() {\r\n        return this.props.pageSet();\r\n    }\r\n    state = {\r\n        total: '',\r\n    }\r\n\r\n    render() {\r\n        const total = this.props.total\r\n        return (\r\n            <div>\r\n                計算結果\r\n                <ul>\r\n                    {total}\r\n                </ul>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => this.handleSubmit()}>戻る</Button><br />\r\n            </div>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Cal';\r\nimport Total from '../components/Total';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // num1: state.cal.num1,\r\n        // num2: state.cal.num2,\r\n        total: state.cal.total,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // add: (num1, num2) => dispatch(actions.add(num1, num2)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Total)","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import { Field, reduxForm } from 'redux-form';\r\n\r\nconst propTypes = {\r\n    isAddMode: PropTypes.bool.isRequired,\r\n    mailAddress: PropTypes.string.isRequired,\r\n    pass: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default class MailReg extends React.Component {\r\n\r\n    handleSubmitJava(e) {\r\n        // window.alert('メールアドレスを登録します')\r\n        // e.preventDefault()\r\n    }\r\n\r\n    doChange(e) {\r\n        const curValue = e.target.value\r\n        this.setState({ mailAddress: curValue })\r\n        if (this.state.mailAddress.length > 3 && this.state.pass.length > 6) {\r\n            this.state.isAddMode = true\r\n        } else {\r\n            this.state.isAddMode = false\r\n        }\r\n    }\r\n\r\n    doChange2(e) {\r\n        const curValue = e.target.value\r\n        this.setState({ pass: curValue })\r\n        if (this.state.mailAddress.length > 3 && this.state.pass.length > 6) {\r\n            this.state.isAddMode = true\r\n        } else {\r\n            this.state.isAddMode = false\r\n        }\r\n    }\r\n\r\n    doChange3(e) {\r\n        const curValue = e.target.value\r\n        const type = e.target.type\r\n\r\n        // name属性値によって処理を分岐\r\n        switch (type) {\r\n            // name属性値がmailだった場合\r\n            case \"mailAddress\":\r\n                this.setState({ mailAddress: curValue })\r\n                break;\r\n            case \"pass\":\r\n                this.setState({ pass: curValue })\r\n                break;\r\n        }\r\n        if (this.state.mailAddress.length > 0 && this.state.pass.length > 0) {\r\n            this.state.isAddMode = true\r\n        }\r\n\r\n    }\r\n\r\n    state = {\r\n        mailAddress: '',\r\n        pass: '',\r\n        isAddMode: false\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const styles = {\r\n            registerBtn: {\r\n                isAdd: {\r\n                    display: 'inline-block'\r\n                },\r\n                isNotAdd: {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        }\r\n\r\n        const doChange = (e) => this.doChange(e)\r\n        const doChange2 = (e) => this.doChange2(e)\r\n        const doSubmit = (e) => this.handleSubmitJava(e)\r\n        return (\r\n            <div>\r\n                <form method='post' action=\"/mailReg\" onSubmit={doSubmit}>\r\n                    <TextField type='text'\r\n                        name='mailAddress'\r\n                        style={{ width: '500px' }}\r\n                        value={this.state.mailAddress}\r\n                        onChange={doChange}\r\n                        label=\"メールアドレス\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <br />\r\n                    <TextField type='text'\r\n                        name='pass'\r\n                        value={this.state.pass}\r\n                        onChange={doChange2}\r\n                        label=\"パスワード\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\" />\r\n                    <br />\r\n                    <Button type='submit'\r\n                        label='登録'\r\n                        variant='contained'\r\n                        color='secondary'\r\n                        style={(this.state.isAddMode) ? styles.registerBtn.isAdd : styles.registerBtn.isNotAdd}>\r\n                        登録\r\n                    </Button>\r\n\r\n                    <br />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMailReg.propTypes = propTypes;","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/MailReg';\r\nimport MailReg from '../components/MailReg';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mailAddress: state.mailReg.mailAddress,\r\n        pass: state.mailReg.pass,\r\n        isAddMode: state.mailReg.isAddMode,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MailReg)","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:8080/',\r\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n    // headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //     'X-Requested-With': 'XMLHttpRequest'\r\n    // },\r\n    // responseType: 'json'\r\n});","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n// import { Field, reduxForm } from 'redux-form';\r\n\r\nconst propTypes = {\r\n    isAddMode: PropTypes.bool.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    pass: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    handleSubmitJava(e) {\r\n        // window.alert('メールアドレスを登録します')\r\n        // e.preventDefault()\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.props.login(this.state.id, this.state.pass)\r\n    }\r\n\r\n    doChange(e) {\r\n        const curValue = e.target.value\r\n        const name = e.target.name\r\n\r\n        // name属性値によって処理を分岐\r\n        switch (name) {\r\n            // name属性値がmailだった場合\r\n            case \"id\":\r\n                this.setState({ id: curValue })\r\n                break;\r\n            case \"pass\":\r\n                this.setState({ pass: curValue })\r\n                break;\r\n        }\r\n        if (this.state.id.length > 0 && this.state.pass.length > 6) {\r\n            this.state.isAddMode = true\r\n        } else {\r\n            this.state.isAddMode = false\r\n        }\r\n    }\r\n\r\n    state = {\r\n        id: '',\r\n        pass: '',\r\n        isAddMode: false,\r\n    }\r\n\r\n    render() {\r\n        const styles = {\r\n            registerBtn: {\r\n                isAdd: {\r\n                    display: 'inline-block'\r\n                },\r\n                isNotAdd: {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        }\r\n\r\n        const doChange = (e) => this.doChange(e)\r\n        const doSubmit = (e) => this.handleSubmitJava(e)\r\n\r\n        const auth = this.props.auth\r\n        return (\r\n            <div>\r\n                <form method='post' action=\"/login\" onSubmit={doSubmit} >\r\n                    <TextField type='text' name='id' style={{ width: '250px' }} value={this.state.id} onChange={doChange} label=\"ユーザID\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br />\r\n                    <TextField type='text' name='pass' value={this.state.pass} onChange={doChange} label=\"パスワード\" variant=\"outlined\" margin=\"normal\" />\r\n                    <br />\r\n                    <Button\r\n                        variant='contained'\r\n                        color='secondary'\r\n                        style={(this.state.isAddMode) ? styles.registerBtn.isAdd : styles.registerBtn.isNotAdd}\r\n                        onClick={() => this.handleSubmit()}\r\n                    >\r\n                        ログイン\r\n                    </Button>\r\n                    <br />\r\n                    {auth}\r\n                    <br />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = propTypes;","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/Login';\r\nimport Login from '../components/Login';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        id: state.login.id,\r\n        pass: state.login.pass,\r\n        isAddMode: state.login.isAddMode,\r\n        auth: state.login.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (id, pass) => dispatch(actions.login(id, pass)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import axios from '../axios/axios';\r\n\r\nconst _login = (id, pass, auth) => ({\r\n    type: 'LOGIN',\r\n    id, pass, auth\r\n});\r\n\r\n\r\nexport const login = (id, pass) => {\r\n    return (dispatch) => {\r\n        let params = new URLSearchParams();\r\n        params.append('userid', id);\r\n        params.append('password', pass);\r\n        console.log('paramid:' + id);\r\n        return axios.post('/login', params).then(result => {\r\n            // console.log(result.data);\r\n            console.log('id:' + id);\r\n            console.log('result:' + result);\r\n            console.log('resultauth:' + result.data);\r\n            console.log('resultauth:' + result.auth);\r\n            // console.log(auth);\r\n            // dispatch(_login(id, pass, auth));\r\n            dispatch(_login(id, '', result.data));\r\n        });\r\n        //     return axios.post('/login',\r\n        //         {\r\n        //             userid: 'test',\r\n        //             passwprd: 'testtest'\r\n        //         }).then(result => {\r\n        //             dispatch(_login(result.data));\r\n        //         });\r\n\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// export const login = (userlogin = {\r\n//     id: '',\r\n//     pass: '',\r\n//     auth: ''\r\n// }) => {\r\n//     return (dispatch) => {\r\n//         const loginRs = {\r\n//             id: userlogin.id,\r\n//             pass: userlogin.pass,\r\n//             auth: userlogin.auth\r\n//         }\r\n//         let params = new URLSearchParams();\r\n//         console.log(loginRs.id);\r\n//         params.append('userid', loginRs.id);\r\n//         params.append('password', loginRs.pass);\r\n//         return axios.post('/login', params).then(result => {\r\n//             console.log(result.data);\r\n//             // dispatch(_login(id, pass, auth));\r\n//             dispatch(_login(result.data));\r\n//         });\r\n//         //     return axios.post('/login',\r\n//         //         {\r\n//         //             userid: 'test',\r\n//         //             passwprd: 'testtest'\r\n//         //         }).then(result => {\r\n//         //             dispatch(_login(result.data));\r\n//         //         });\r\n\r\n//     };\r\n// };","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Ok extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                ログイン成功\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Ng extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                ログインエラー\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport './App.css';\nimport Todo from './containers/Todo';\nimport Cal from './containers/Cal';\nimport Java from './containers/JavaDB';\nimport Total from './containers/Total';\nimport Mail from './containers/MailReg';\nimport Login from './containers/Login';\n\nimport Ok from './components/Ok';\nimport Ng from './components/Ng';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n    };\n  }\n\n  setNextPage() {\n    this.setState({ page: 2 });\n  }\n\n  setPrePage() {\n    this.setState({ page: 1 });\n  }\n\n  render() {\n\n    // メニューの選択状態\n    // const currentPage = this.state.currentPage; // （1）\n    const currentPage = this.state.page; // （1）\n\n    //  メイン部分のコンポーネントの入れ物\n    let Content = null; // デフォルトでは何も表示しない\n    let ListContent = null; // デフォルトでは何も表示しない\n\n    switch (currentPage) {\n      case 1:\n        Content = (() => <Cal pageSet={() => { this.setNextPage(); }} />);\n        ListContent = (() => <Todo />);\n        break;\n      case 2:\n        Content = (() => <Total pageSet={() => { this.setPrePage(); }} />);\n        ListContent = (() => '');\n        break;\n      default:\n        Content = (() => <Cal pageSet={() => { this.setNextPage(); }} />);\n        ListContent = (() => <Todo />);\n        break;\n    }\n\n    const Home = () => (\n      <div>\n        <h1>どの開発ページへ遷移する？</h1>\n        <ui>\n          <li><a href='/list'>リスト追加</a></li>\n          <li><a href='/add'>足し算</a></li>\n          <li><a href='/java'>Java通信</a></li>\n          <li><a href='/mailReg'>メール登録</a></li>\n          <li><a href='/Login'>ログイン</a></li>\n        </ui>\n        {/* どの開発ページへ遷移する？\n        <List>\n          <ListItem><ListItemText><a href='/list'>リスト追加</a> </ListItemText></ListItem>\n          <ListItem><ListItemText><a href='/add'>足し算</a> </ListItemText></ListItem>\n          <ListItem><ListItemText><a href='/java'>Java通信</a> </ListItemText></ListItem>\n          <ListItem><ListItemText><a href='/mailReg'>メール登録</a> </ListItemText></ListItem>\n          <ListItem><ListItemText><a href='/mailReg'>メール登録</a> </ListItemText></ListItem>\n        </List> */}\n      </div>\n    )\n\n\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/list\" component={ListContent} />\n          <Route path=\"/add\" component={Content} />\n          <Route path=\"/java\" component={Java} />\n          <Route path=\"/mailReg\" component={Mail} />\n          <Route path=\"/login\" component={Login} />\n        </div>\n      </BrowserRouter>\n      // <div className=\"App\">\n      //   <Content /> {}\n      //   <br />\n      //   <ListContent /> {}\n      // </div>\n    );\n  }\n}\n\nexport default App;","const initialState = {\r\n    todoList: [],\r\n}\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            // 新しく追加するTODO\r\n            const todo = action.payload.todo;\r\n            // stateを複製して追加\r\n            const newState = Object.assign({}, state);\r\n            newState.todoList.push(todo);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    total: 0,\r\n}\r\n\r\nexport const calReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            const num1 = parseInt(action.payload.num1);\r\n            const num2 = parseInt(action.payload.num2);\r\n            // stateを複製して追加\r\n            const newState = Object.assign({}, state);\r\n            newState.total = num1 + num2;\r\n            console.log(newState.total);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    isAddMode: false,\r\n}\r\n\r\nexport const mailRegReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            // const num1 = parseInt(action.payload.mailAddress);\r\n            // const num2 = parseInt(action.payload.num2);\r\n            // // stateを複製して追加\r\n            const newState = Object.assign({}, state);\r\n            // newState.total = num1 + num2;\r\n            // console.log(newState.total);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    id: '',\r\n    pass: '',\r\n    isAddMode: false,\r\n    auth: 'ログイン前',\r\n}\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            const newState = Object.assign({}, state);\r\n            newState.auth = action.auth;\r\n            console.log('redu:' + newState.auth);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport App from './App.js';\nimport createStore from './createStore';\n// import registerServiceWorker from './serviceWorker';\nconst store = createStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// registerServiceWorker.register();","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from 'redux-thunk';\r\nimport { todoReducer } from \"./reducers/Todo\";\r\nimport { calReducer } from \"./reducers/Cal\";\r\nimport { mailRegReducer } from \"./reducers/MailReg\";\r\nimport { loginReducer } from \"./reducers/Login\";\r\nimport { pageSetReducer } from \"./reducers/PageSet\";\r\n\r\nexport default function createStore() {\r\n    const store = reduxCreateStore(\r\n        combineReducers({\r\n            todo: todoReducer,\r\n            cal: calReducer,\r\n            mailReg: mailRegReducer,\r\n            login: loginReducer,\r\n            // pageset: pageSetReducer,\r\n        }),\r\n        applyMiddleware(\r\n            logger,\r\n            thunk\r\n        )\r\n    );\r\n\r\n    return store;\r\n}"],"sourceRoot":""}